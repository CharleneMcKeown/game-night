"use client"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"

// Updated mechanisms list based on current BGG taxonomy
const MECHANISMS = [
  "Action Drafting",
  "Action Points",
  "Action Queue",
  "Action Retrieval",
  "Action Timer",
  "Acting",
  "Advantage Token",
  "Alliances",
  "Area Majority / Influence",
  "Area Movement",
  "Auction: Dutch",
  "Auction: English",
  "Auction: Fixed Placement",
  "Auction: Once Around",
  "Auction: Sealed Bid",
  "Auction: Turn Order Until Pass",
  "Automatic Resource Growth",
  "Bag Building",
  "Bingo",
  "Bluffing",
  "Bribery",
  "Campaign / Battle Card Driven",
  "Card Drafting",
  "Card Play Conflict Resolution",
  "Catch the Leader",
  "Chaining",
  "Chit-Pull System",
  "Closed Drafting",
  "Command Cards",
  "Commodity Speculation",
  "Communication Limits",
  "Connections",
  "Constrained Bidding",
  "Contracts",
  "Cooperative Game",
  "Crayon Rails System",
  "Critical Hits and Failures",
  "Cube Tower",
  "Deck Construction",
  "Deck, Bag, and Pool Building",
  "Deduction",
  "Delayed Purchase",
  "Dice Rolling",
  "Die Icon Resolution",
  "Different Dice Movement",
  "Draft-and-Write",
  "Drafting",
  "Dudes on a Map",
  "Elapsed Real Time Ending",
  "Enclosure",
  "End Game Bonuses",
  "Engine Building",
  "Events",
  "Finale Ending",
  "Flicking",
  "Follow",
  "Force Commitment",
  "Grid Coverage",
  "Grid Movement",
  "Hand Management",
  "Hexagon Grid",
  "Hidden Information",
  "Hidden Movement",
  "Hidden Roles",
  "Hidden Victory Points",
  "Highest-Lowest Scoring",
  "Hot Potato",
  "I Cut, You Choose",
  "Impulse Movement",
  "Income",
  "Increase Value of Unchosen Resources",
  "Induction",
  "Inheritance",
  "Kill Steal",
  "King of the Hill",
  "Ladder Climbing",
  "Layering",
  "Legacy Game",
  "Line Drawing",
  "Line of Sight",
  "Loans",
  "Lock-Up",
  "Lose a Turn",
  "Mancala",
  "Map Addition",
  "Map Deformation",
  "Map Reduction",
  "Market",
  "Matching",
  "Measurement Movement",
  "Melding and Splaying",
  "Memory",
  "Minimap",
  "Modular Board",
  "Move Through Deck",
  "Movement Points",
  "Movement Template",
  "Moving Multiple Units",
  "Multi-Use Cards",
  "Multiple Maps",
  "Narrative Choice / Paragraph",
  "Negotiation",
  "Network and Route Building",
  "Once-Per-Game Abilities",
  "Open Drafting",
  "Order Counters",
  "Ownership",
  "Paper-and-Pencil",
  "Passed Action Token",
  "Pattern Building",
  "Pattern Movement",
  "Pattern Recognition",
  "Physical Removal",
  "Pick-up and Deliver",
  "Pieces as Map",
  "Player Elimination",
  "Player Judge",
  "Point to Point Movement",
  "Predictive Bid",
  "Press Your Luck",
  "Prisoner's Dilemma",
  "Programmed Movement",
  "Push Your Luck",
  "Race",
  "Random Production",
  "Re-rolling and Locking",
  "Real-Time",
  "Relative Movement",
  "Resource to Move",
  "Rock-Paper-Scissors",
  "Role Playing",
  "Roll / Spin and Move",
  "Rondel",
  "Scenario / Mission / Campaign Game",
  "Score-and-Reset Game",
  "Secret Unit Deployment",
  "Semi-Cooperative Game",
  "Set Collection",
  "Simulation",
  "Simultaneous Action Selection",
  "Single Loser Game",
  "Slide/Push",
  "Solo / Solitaire Game",
  "Speed Matching",
  "Square Grid",
  "Stacking and Balancing",
  "Static Capture",
  "Stock Holding",
  "Storytelling",
  "Sudden Death Ending",
  "Take That",
  "Targeted Clues",
  "Team-Based Game",
  "Tech Trees / Tech Tracks",
  "Three Dimensional Movement",
  "Throw It In Your Cart",
  "Tile Placement",
  "Time Track",
  "Track Movement",
  "Trading",
  "Traitor Game",
  "Trick-taking",
  "Tug of War",
  "Turn Order: Auction",
  "Turn Order: Claim Action",
  "Turn Order: Pass Order",
  "Turn Order: Progressive",
  "Turn Order: Random",
  "Turn Order: Role Order",
  "Turn Order: Stat-Based",
  "Turtling",
  "Variable Phase Order",
  "Variable Player Powers",
  "Variable Set-up",
  "Victory Points as a Resource",
  "Voting",
  "Worker Placement",
  "Worker Placement with Dice Workers",
  "Worker Placement, Different Worker Types",
  "Zone of Control"
]

interface MechanismComboboxProps {
  value: string
  onValueChange: (value: string) => void
}

export function MechanismCombobox({ value, onValueChange }: MechanismComboboxProps) {
  const handleValueChange = (newValue: string) => {
    // Convert "any" back to empty string for the parent component
    onValueChange(newValue === "any" ? "" : newValue)
  }

  // Convert empty string to "any" for the Select component
  const selectValue = value === "" ? "any" : value

  return (
    <Select value={selectValue} onValueChange={handleValueChange}>
      <SelectTrigger className="bg-purple-800/50 border-purple-600 text-white hover:bg-purple-700/50">
        <SelectValue placeholder="Select a mechanism..." className="text-white" />
      </SelectTrigger>
      <SelectContent className="bg-purple-900 border-purple-700 max-h-60">
        <SelectItem value="any" className="text-purple-300 focus:bg-purple-800 focus:text-white">
          Any mechanism
        </SelectItem>
        {MECHANISMS.map((mechanism) => (
          <SelectItem key={mechanism} value={mechanism} className="text-white focus:bg-purple-800 focus:text-white">
            {mechanism}
          </SelectItem>
        ))}
      </SelectContent>
    </Select>
  )
}
